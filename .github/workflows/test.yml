name: LPPL Prediction System Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create test environment file
      run: |
        echo "FRED_API_KEY=${{ secrets.FRED_API_KEY }}" > .env
        echo "ALPHA_VANTAGE_KEY=demo" >> .env  # Demo key for CI
        
    - name: Run core functionality tests
      run: |
        python -m pytest tests/test_lppl_core.py -v
        
    - name: Run integration tests
      run: |
        python run_tests.py
        
    - name: Test documentation examples
      run: |
        python quick_start_example.py
        
    - name: Check code quality
      run: |
        pip install flake8
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        
    - name: Generate test report
      if: always()
      run: |
        python run_tests.py > test_report.txt 2>&1 || true
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-python-${{ matrix.python-version }}
        path: |
          test_report.txt
          results/